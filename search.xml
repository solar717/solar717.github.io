<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>毕业设计碎碎念</title>
      <link href="/2020/02/08/bi-ye-she-ji-sui-sui-nian/"/>
      <url>/2020/02/08/bi-ye-she-ji-sui-sui-nian/</url>
      
        <content type="html"><![CDATA[<h1 id="聊一聊可怜的IDS"><a href="#聊一聊可怜的IDS" class="headerlink" title="聊一聊可怜的IDS"></a>聊一聊可怜的IDS</h1><h2 id="4-Active-learning-for-Wireless-IoT-Intrusion-Detection"><a href="#4-Active-learning-for-Wireless-IoT-Intrusion-Detection" class="headerlink" title="4.Active learning for Wireless IoT Intrusion Detection"></a>4.Active learning for Wireless IoT Intrusion Detection</h2><h3 id="main-idea"><a href="#main-idea" class="headerlink" title="main idea"></a>main idea</h3><p>1.Intrusion Detection Tech:</p><ul><li><p>misuse-based method: </p><p>First get signature of domain knowledge and expert experience, look for a particular pattern in the incoming network,known!</p></li><li><p>anomaly-based method:</p><p>First learns the normal network behaviours then effectively detect unknown attacks</p></li><li><p>hybrid method </p></li></ul>]]></content>
      
      
      <categories>
          
          <category> undergraduate </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 4th year </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-02-08 【转载】地里的刷题攻略</title>
      <link href="/2020/02/08/0/"/>
      <url>/2020/02/08/0/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-Preparation"><a href="#0x00-Preparation" class="headerlink" title="0x00 Preparation"></a>0x00 Preparation</h1><h2 id="如何暗推"><a href="#如何暗推" class="headerlink" title="如何暗推"></a>如何暗推</h2><p>&lt;(<a href="https://baike.baidu.com/item/暗推/7556232?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/%E6 … /7556232?fr=aladdin</a>)&gt;</p><p>提前准备是最好的外挂。拿到offer的时间是2月底，入学是8月，第一次学校的Career Fair和大公司的招聘季一致，是在9月到10月。90%的<a href="http://www.1point3acres.com/bbs/thread-259262-1-1.html" target="_blank" rel="noopener">新生</a>会错过那一次机会，因为他们完全没有准备，开学一个月不到就要投简历和面试？所以如果这个时间点到来的时候，你已经<a href="http://www.1point3acres.com/bbs/forum-84-1.html" target="_blank" rel="noopener">刷题</a>刷够了，简历准备好了，那你就自动超越90%的竞争者。如果你错过了第一学期的招聘季，找实习只能等到第二学期的春季招聘，一般大公司的实习大部分发给秋季招聘，剩下没招够的head count留给春招。这也就是说，对于之前没有准备好的90%的人，这次是最后的找实习的机会，他们必然会参加这次的春招，与你一起竞争这比秋招少很多的名额。既然准备面试的时间是一样多的，那把这些时间分配到入学之前，提前准备是不是就等于开了一个外挂。你觉得毕业后这么长的假期不出去旅游浪费了？其实这是一种延迟满足的做法，牺牲了这个假期，在第一学期的秋招找到实习，那么你之后获得了无拘无束的旅游的机会，感恩节，圣诞节，寒假，第二学期的春假等等所有的假期你都可以去旅游。如果没找到实习，这些假期都不得不被用来刷题。</p><h2 id="上下文切换"><a href="#上下文切换" class="headerlink" title="上下文切换"></a>上下文切换</h2><p>任务切换的代价是昂贵的，长时间专注一件事效率会高很多。所以在假期利用一大片时间去准备效率是比开学后，挤课余时间，挤周末去刷题效率高很多。</p><h2 id="转专业"><a href="#转专业" class="headerlink" title="转专业"></a>转专业</h2><p>作为转专业的你，想要在开学之后，不仅要跟上学习进度（很多研究生课程默认你有四年的CS基础），还要跟科班出生的人一起竞争实习，简直是痴人说梦。所以开学前的5个月对你来说至关重要，用5个月时间去追赶别人积累的四年，当然是非常难得，我会写一系列的文章教你，如何利用这5个月弯道超车追上科班出生的同学。</p><h2 id="洗脑"><a href="#洗脑" class="headerlink" title="洗脑"></a>洗脑</h2><p>说了那么多，就是为了帮你洗脑，这五个月的任务就是学习学习再学习。有了这个概念之后我们开始聊如何操作。这系列文章将以找到秋季实习，拿到return offer 或者申请到full time工作作为主要目标，培养CS专业素养，培养自学能力，提升编程能力，作为具体操作的指导方向。</p><h2 id="拿到offer关键因素"><a href="#拿到offer关键因素" class="headerlink" title="拿到offer关键因素"></a>拿到offer关键因素</h2><ul><li>baidu 1point3acres<br>我们把拿到科技公司Soft Engineer Offer当做游戏挑战，那么眼前有两个大关。简历关和面试关。简历关就是完成一份完美的简历，通过HR筛选，获得面试资格。简历关需要通过积累项目，书写简历，以借助一系列工具体现你的CS素养。这样通过过硬的项目支撑，有恰当优美的表述，以及CS素养透露出的逼格，一定能够征服HR姐姐。面试关也是类似，通过刷题的日积月累，保证了基础知识；面试关考察也是有“得分点”，我们通过面试现场的发挥来征服面试官哥哥。以下每一点都会写一篇博文来分析。</li></ul><h3 id="简历关"><a href="#简历关" class="headerlink" title="简历关"></a>简历关</h3><p>以下将会是我通过自己准备简历的心得，跟HR的交流以及参加校园招聘筛选简历的经验总结的文章</p><ol><li>项目经历</li><li>简历书写-baidu 1point3acres</li><li>如何运用 github，<a href="http://redirect.viglink.com/?key=a1aa544c3b328def412653f9fc432107&u=http%3A%2F%2Flinkedin.com" target="_blank" rel="noopener">linkedin</a>，personal blog 体现CS素养</li></ol><h3 id="面试关"><a href="#面试关" class="headerlink" title="面试关"></a>面试关</h3><p>以下是总结我自己当年刷题，以及在FB当面试官的经历给出的建议</p><ol><li><p>面试前如何刷题</p></li><li><p>面试时如何表现</p><p>from: <a href="https://www.1point3acres.com/bbs/thread-350438-1-1.html" target="_blank" rel="noopener">https://www.1point3acres.com/bbs/thread-350438-1-1.html</a></p></li></ol><h1 id="0x01-刷题"><a href="#0x01-刷题" class="headerlink" title="0x01 刷题"></a>0x01 刷题</h1><h2 id="战略"><a href="#战略" class="headerlink" title="战略"></a>战略</h2><h3 id="越早开始越好"><a href="#越早开始越好" class="headerlink" title="越早开始越好"></a>越早开始越好</h3><p>不要等到说“我这门Java入门课上完再开始刷题”，因为等你上完Java课，一个月过去了，等你开始刷题的时候，Java基础语法又忘记了，还得重新查Java语法。正确的方式应该是从今天就开始刷题，同时可以在上<a href="http://www.1point3acres.com/bbs/forum.php?mod=collection&action=view&ctid=1&fromop=all" target="_blank" rel="noopener">公开课</a>，看书等等。</p><h3 id="效率最大化"><a href="#效率最大化" class="headerlink" title="效率最大化"></a>效率最大化</h3><p>做一道题不是做完，accept就完事，如果想刷完一遍对每题都印象深刻，就要做到效率最大化，一份时间当好几份用，刷一遍达到刷好几遍的效果</p><ul><li>x1 第一遍做</li><li>x2 复习一遍用到的算法，理解题点</li><li>x3 做笔记，下次复习的时候能够快速回忆起来关键点</li><li>x4 分析时间复杂度，空间复杂度，从而思考如何优化</li></ul><h2 id="战术"><a href="#战术" class="headerlink" title="战术"></a>战术</h2><p>刷题，刚开始会很难，即使对于科班出身，也需要时间去上手。最难的是前20道题，因为这个时候，语法不熟，Leetcode系统不熟，算法不熟。但是一旦熬过20题就会感觉变轻松了，如果是按Acceptance做的话，50-70题又是一个坎，因为你会遇到很多新的数据结构，没接触的数据结构直接做会感觉很难。遇到这样的情况就硬着头皮按着战术去做就是。所以下面是战术。</p><h3 id="如何刷题"><a href="#如何刷题" class="headerlink" title="如何刷题"></a>如何刷题</h3><p>第零步，选择语言，建议用Java或者C++，大部分公司不限制面试语言，一些公司比如<a href="http://www.amazon.com/b?_encoding=UTF8&tag=1p3a-guanlian-20&linkCode=ur2&linkId=89c11e2c5b86155c5422f19cca1e9880&camp=1789&creative=9325&node=5" target="_blank" rel="noopener">Amazon</a>会在OA的时候限制只能用Java和C++；选择平台，建议用Leetcode，市面上什么lintcode之类的都是相互借鉴，做一个就好。IDE选择，直接使用Leetcode提供的界面编程。<br>第一步，按照Acceptance从高到低排序，选题号小于300的做，因为这两年从300增到700题，如果完全按照Ac来做的话前面会太简单，做了100道题可能做得都是easy的，进步太慢。按这个排序做20题，目的熟悉基础语法，熟悉leetcode，不会的就看答案，这里的答案是指Discuss里面的高票回答，看完答案再重写一遍，因为这个时候你不会，基本上是因为语法不会，Ac前20题不会出现复杂的数据结构。</p><p>第二步，继续按照Acceptance排序刷接下来的20-50题，每次遇到一个新的数据结构，先查书/wiki，学习这个数据结构，然后做题，做不出来，再看答案，看完重写一遍，会了之后，选择同样数据结构的题横着刷（按Topic来刷，如图）3-4题，这样的目的在于，学习了新的数据结构，马上应用了3-4遍，学习的效率很高。然后再继续按排序做。</p><p>第三步，刷题顺序不变，按照Acceptance，同时夹杂着横刷，50-300，但是因为积累了一定的数据结构，所以开始加入分析数据结构，比如为什么用Linked List而不用Array List，为什么用Queue而不用Stack；分析算法复杂度，包括时间复杂度和空间复杂度；然后就是思考如何优化，时空是否存在优化，以及能否牺牲空间换取时间。<br>$$O(n^2) &gt; O(n\sqrt(n)) &gt; O(n)$$</p><p>第四步，如果按照我说的笔记方法在记录的话，第二遍刷的时候可以按照题号排序来做，夹杂着横刷，这一边遇到不会的先看笔记，一般看了笔记有一点提示就很快能做出来，如果还是想不起来那可以看Discuss然后做，做完把这题作为好题分析去做笔记。</p><p>第五步，一般是面试之前，边看面经边按照公司来刷，做到这一步的时候有必要买membership，这样就可以按公司查看。</p><p>上传github，加上一定的注释来解释你的代码，一方面为了刷github上repo和submit的数量，刷绿点；另一方面熟悉git这种collaborate的工具。像第一篇里面说到的，使用github是CS素养的第一步，后面会具体写。</p><h3 id="如何看答案"><a href="#如何看答案" class="headerlink" title="如何看答案"></a>如何看答案</h3><p>进Discuss，按照vote排序，选择靠前并且使用你用的编程语言的一条，点进去看，Solution是新加的功能，里面一般只有一个参考答案，可以参考。看了别人的答案，高票的一般都很巧妙，并且代码风格都很好，是很好的学习资源，不仅学习他的算法，思路还要学习他的分析等等。看完答案，回去自己重写一遍，重写的时候决不能看答案。</p><h3 id="如何做笔记"><a href="#如何做笔记" class="headerlink" title="如何做笔记"></a>如何做笔记</h3><ul><li><p>易错点记录，只要不是一次过的题，就存在易错点，比如语法错啦，边界条件少啦等等。很典型的递归错误就是忘了加退出条件。这样的错误记录了两三遍之后，就再也不会错了。</p></li><li><p>语法记录，很多常用的语法，比如各种数据结构的初始化比如初始化一个list of list<code>List&lt;List&lt;Integer&gt;&gt; lol = new LinkedList&lt;List&lt;Integer&gt;&gt;();</code>，再比如数组排序，以及如何使用compare函数</p><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>Arrays<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>知识点记录，给每一类题都建一个文件，推荐Dropbox的paper或者Evernote。按前面第二步的方法做的时候将题目归类并记录。记录的时候，就用一句话记录这题的题号，用的关键知识点，和关键代码，这样的好处是下次复习的时候可以快速想起，比如明天就要面试FB了，今天晚上你不可能做新题了，你就可以看你记录的这些关键点，复习效率特别高。举一个List的例子 <a href="https://www.evernote.com/l/AKNd6Oijdz5EaK8aBHfybQGOTLWqTt2isbA" target="_blank" rel="noopener">https://www.evernote.com/l/AKNd6Oijdz5EaK8aBHfybQGOTLWqTt2isbA</a></p></li><li><p>好题分析，上一点是每题必须做，这一点是选择性的，当你做到一道题卡了很久，或者学到很多知识点（有好几个follow up），你可以写一篇文章来分析，来记录你是如何一步一步优化做出最优解的。</p></li></ul><h3 id="辅助材料"><a href="#辅助材料" class="headerlink" title="辅助材料"></a>辅助材料</h3><ul><li>数据结构Java书，这两本书是我刷题的时候用到最多的书，遇到新的数据结构的题目，第一步就是先翻这两本书，学习一下对应的数据结构，然后回过头看题目，会感觉豁然贯通。<br>链接: <a href="https://pan.baidu.com/s/1W0-6E316u_nEG3yPOv_GEw" target="_blank" rel="noopener">https://pan.baidu.com/s/1W0-6E316u_nEG3yPOv_GEw</a> 密码: 86k1<br>wikipedia</li><li>Google，任何问题，先问Google，碰到语法问题，程序报错等等，复制到Google里基本都能找到解决方案</li></ul><p>from: <a href="https://www.1point3acres.com/bbs/thread-350445-3-1.html" target="_blank" rel="noopener">https://www.1point3acres.com/bbs/thread-350445-3-1.html</a></p><h1 id="0x02-提升CS素养"><a href="#0x02-提升CS素养" class="headerlink" title="0x02 提升CS素养"></a>0x02 提升CS素养</h1><h2 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h2><p>为什么要写博客？刘未鹏的<a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" target="_blank" rel="noopener">博客</a>里给出了很好的回答，我当初也是看了他的文章才开始写博客的。</p><p>一个人提升自己影响力的方法有两种，演讲和写作。它们的共同点就是实现了一次产出，无限次的被阅读。让我深有体会的就是我写这一系列【招工求职】的文章。如果我跟一个人分享我招工求职的经验，其实跟我写下来发到博客上花的时间基本上是一样的。然而后者可以让更多的人看到。</p><h3 id="怎么开始写"><a href="#怎么开始写" class="headerlink" title="怎么开始写"></a>怎么开始写</h3><p>推荐使用hexo+github搭建你的第一个博客，域名可以在万网上申请。</p><p>如何搭建博客，可以参考：</p><ol><li>hero官网 <a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a></li><li>[Mac搭建Hexo博客及NexT主题配置优化](<a href="https://madongqiang2201.github.io/2016/07/21/Mac下Hexo＋github-pages搭建静态博客/" target="_blank" rel="noopener">https://madongqiang2201.github.i … %E5%8D%9A%E5%AE%A2/</a>)</li><li>一篇老教程，虽然hexo 3.0 跟以前的有所不一样，但是这篇很详细值得参考 <a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">http://ibruce.info/2013/11/22/hexo-your-blog/</a></li></ol><h3 id="写什么内容"><a href="#写什么内容" class="headerlink" title="写什么内容"></a>写什么内容</h3><p>因为我们当前最重要的目的就是找工作，所以博客内容以下面这些为主，当然不限于这些。尽量用英文写专业相关的文章，一方面锻炼英文表达能力，一方面如果hr打开你的博客，也能知道写的是什么。</p><ol><li><p>算法分析，leetcode遇到一道好题，比如有好几种方法/数据结构的题，可以写一篇分析题目的文章，从最简单的解法写起，写下分析的过程，数据结构的比较，时间空间复杂度的分析等等。用英文写这些的另一个好处就是写完一篇就相当于模拟面试了一遍，熟悉了相关算法的英文表述。</p></li><li><p>学习笔记，在学校上课的笔记，以及心得都可以写成博客。这样同学如果问你要笔记，你就一个博客链接甩过去（如何正确地装逼）</p></li></ol><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p>对于程序员找工作，github可能比linked还要重要。丰富的github repo是hr筛选简历时的一个加分点（其他加分点详见另外一篇如何准备简历篇）。那主要传些什么上去呢？即使你是新手也没事，不用传什么高大上的开源项目。平时<a href="http://www.1point3acres.com/bbs/forum-84-1.html" target="_blank" rel="noopener">刷题</a>，刷完就可以传上去；上课大作业，可以等到上完课传上去；自己课余时间做的小项目都可以传上去。我建议从现在就开始每天往github上传点东西。github会用绿点记录你每天的活跃程度。如果你从现在就开始使用github，到投简历的时候，你的github首页满屏的绿点，hr眼前一亮，第一印象感觉很牛逼。<br>如果有兴趣可以相互follow，我的github是<a href="https://github.com/solar717" target="_blank" rel="noopener">https://github.com/solar717</a></p><h2 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h2><h3 id="Latex"><a href="#Latex" class="headerlink" title="Latex"></a>Latex</h3><p>专业排版工具，一般写论文和简历的时候会用到。推荐 <a href="https://www.overleaf.com/" target="_blank" rel="noopener">Overleaf</a>，一款在线的Latex编辑器，所见即所得，还有大量模板。比如一个<a href="https://www.overleaf.com/read/kxyfzyksvtkk" target="_blank" rel="noopener">简历模板</a> 用Latex写的简历，先不管内容，看起来就很专业。</p><h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><p>一款轻量级排版工具，常用来写博客，写笔记，语法简单。我的博客里的文章都是用markdown写的。搭配<a href="https://www.mathjax.org/" target="_blank" rel="noopener">MathJax</a>，克服了数学公式排版的问题，能让你爱上写带有数学公式的博客，比如：</p><h4 id="Maxwell’s-Equations"><a href="#Maxwell’s-Equations" class="headerlink" title="Maxwell’s Equations"></a>Maxwell’s Equations</h4><p>\[ \begin{aligned}<br>\nabla \times \vec{\mathbf{B}} -, \frac1c, \frac{\partial\vec{\mathbf{E}}}{\partial t} &amp; = \frac{4\pi}{c}\vec{\mathbf{j}} \  \nabla \cdot \vec{\mathbf{E}} &amp; = 4 \pi \rho \<br>\nabla \times \vec{\mathbf{E}}, +, \frac1c, \frac{\partial\vec{\mathbf{B}}}{\partial t} &amp; = \vec{\mathbf{0}} \<br>\nabla \cdot \vec{\mathbf{B}} &amp; = 0 \end{aligned}<br>\]</p><p>很多机器学习的课用这套来做笔记，写成博客，莫名的有成就感。</p><h2 id="如何提问"><a href="#如何提问" class="headerlink" title="如何提问"></a>如何提问</h2><p>如何提问没法帮助你装逼，但是绝对属于CS专业素养之一。CS是一个99%知识靠自学的专业，自学的过程就会有很多的问题。如何提问也就显得很重要了。</p><blockquote><p>提出了问题就解决了一半了</p></blockquote><p>好的问题，能提示回答者给出正确的回答，所以说提出了就解决了一半。提问之前做好功课，一方面不浪费别人的时间，一方面自己锻炼了解决问题的能力。所以有问题，先问google，因为除了博士研究课题，基本上其他问题都有人遇到过。所以google一下八成能找到答案。</p><ol><li><p>问具体的问题，</p></li><li><p>问小问题，</p></li><li><p>问选择题，</p></li><li><p>问了问题，包括自己做的调查，给出自己的理解</p><p>举一个例子，问笼统的问题是很为难人的，比如“你对cs找工作有什么建议吗？”这个问题很难回答，因为太笼统，太宽泛了，以至于不是十分钟就能回答的，如果问这样的问题不要期待得到即可的回答（所以我写了一系列文章来回答这个问题）。同样的“刷题有什么建议？”也不是一两句能够回答的。那好的问题是怎么样的呢？</p></li></ol><blockquote><p>“你觉得刚开始刷题应该按照什么顺序刷呢（具体的小问题），是按照顺序呢，还是按照难度呢（给出选择），我做了几道题发现按顺序来老是在难题上卡主（给出自己的理解）”</p></blockquote><p>那回答就很容易，比如</p><blockquote><p>第一遍刷，按照Acceptance刷会更合理，循序渐进。</p><p>这一点在入职之后尤为重要，因为每个人的时间都很紧，如果你经常问“不好”的问题，别人开始可能出于礼貌，给了回答，但是久了别人会不耐烦。如果问“好”的问题，节省回答者的时间，有时候还能启发回答者，让他享受帮助你。</p></blockquote><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>默认大家都是用mac，如果不是应该也都能找到同类的软件</p><h3 id="spectacle"><a href="#spectacle" class="headerlink" title="spectacle"></a><a href="https://www.spectacleapp.com/" target="_blank" rel="noopener">spectacle</a></h3><p>用快捷键来布局窗口的软件</p><h3 id="clipmenu"><a href="#clipmenu" class="headerlink" title="clipmenu"></a><a href="http://www.clipmenu.com/" target="_blank" rel="noopener">clipmenu</a></h3><p>能存复制历史的软件，强大到mac上复制，在iphone上能直接粘贴</p><h3 id="f-lux-day-light-switch"><a href="#f-lux-day-light-switch" class="headerlink" title="f.lux/day light switch"></a>f.lux/day light switch</h3><p>程序员整天对着屏幕，更需要保护研究。这款减弱蓝光的软件，蓝色波段的光对眼睛刺激最大，这个软件消除了蓝光。</p><h3 id="dropbox-paper"><a href="#dropbox-paper" class="headerlink" title="dropbox/paper"></a>dropbox/<a href="https://paper.dropbox.com/" target="_blank" rel="noopener">paper</a></h3><p>重要的或者常用的文件都存在dropbox上，笔记都用paper写，因为支持markdown，简洁好看，所以它一出来我就从evernote换过来了。</p><h3 id="mou"><a href="#mou" class="headerlink" title="mou"></a><a href="http://25.io/mou/" target="_blank" rel="noopener">mou</a></h3><p>本地markdown编辑器，但是mac新版好像用不了了</p><h3 id="iterm-oh-my-zsh"><a href="#iterm-oh-my-zsh" class="headerlink" title="iterm + oh my zsh"></a><a href="https://www.iterm2.com/" target="_blank" rel="noopener">iterm</a> + <a href="ohmyz.sh/">oh my zsh</a></h3><p>终端配置</p><h1 id="杂"><a href="#杂" class="headerlink" title="杂"></a>杂</h1><p>1.Wallpaper    <a href="https://wallhaven.cc/" target="_blank" rel="noopener">https://wallhaven.cc/</a></p><p>2.搭建博客 <a href="https://godweiyang.com/2018/04/13/hexo-blog/" target="_blank" rel="noopener">https://godweiyang.com/2018/04/13/hexo-blog/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Freshman </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/08/hello-world/"/>
      <url>/2020/02/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
